import { Box, Button, Grid, Paper } from "@material-ui/core";
import axios from "axios";
import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import jsSHA from "jssha";
import Image1 from "../images/rupee.jpeg";

// import Example from "../components/example";

function Transaction() {
    let { transactionId } = useParams();
    const [secureHash, setSecureHash] = useState<string>("");
    const [amount, setAmount] = useState<string>("");
    const [result, setResult] = useState<string>("");
    function getHMACResult() {
        var hashInput = "";
        hashInput =
            "J_99923" + //aggregatorId
            data[0].billAmount +
            "356" + //currencyCode
            "T_99922" + // merchantID
            // merchantTxnNo has to be transactionId
            data[0].transactionId + //merchantTxnNo
            `https://prioritypay01.netlify.com/${data[0].transactionId}` + //returnUrl
            "20211201175959"; //this iss txnDate

        // ----------------------------------------------------------------------------
        //for ebs : 55dfbde55886fc7ac6275b6b
        //for fd : 66aabde55886fc7ac627edde
        // ----------------------------------------------------------------------------
        // ----------------------------------------------------------------------------
        // ----------------------------------------------------------------------------
        setSecureHash(() => hashInput);
        // var shaObj = new jsSHA("SHA-256", "TEXT");
        const shaObj = new jsSHA("SHA-256", "TEXT", { encoding: "UTF8" });
        shaObj.setHMACKey("abc", "TEXT"); // use the key shared with the merchant
        shaObj.update(hashInput);
        setResult(() => shaObj.getHMAC("HEX"));
        alert(result);

        // shaObj.update(hashInput);
        // ----------------------------------------------------------------------------
        // ----------------------------------------------------------------------------
        // ----------------------------------------------------------------------------

        // var result = shaObj.getHMAC("HEX");
        // document.forms.myForm.secureHash.value = result;
    }
    const [data, setData] = useState([
        {
            transactionId: "",
            transactionType: "",
            merchantName: "",
            date: "",
            time: "",
            entryType: "",
            billAmount: "",
            description: "",
            paymentMode: "",
            paidAmount: "",
            linkAmount: "",
            personName: "",
            phoneNumber: "",
        },
    ]);
    useEffect(() => {
        axios
            .post(
                "https://prioritypay.herokuapp.com/search-transaction-by-transaction-id",
                {
                    transactionId: transactionId,
                }
            )
            .then((res) => {
                console.log(res.data);
                setData(() => res.data);
                var tempData = JSON.parse(res.data);
                alert(res.data);
                setAmount(() => tempData["billAmount"]);
            });
    }, []);

    return (
        <>
            <div className="" style={{ backgroundColor: "#f2ece7" }}>
                {data.map((item) => (
                    <div className="container">
                        <Box sx={{ p: 2 }} />
                        <Grid container spacing={2}>
                            <Grid item xs={4}>
                                <Box>{item.date}</Box>
                            </Grid>
                            <Grid item xs={8}>
                                <Box className="text-end">{item.time}</Box>
                            </Grid>
                        </Grid>
                        <Box sx={{ p: 5 }} />
                        <Grid item xs={5}>
                            <Box>Hello {item.personName},</Box>
                        </Grid>
                        <Box sx={{ p: 3 }} />
                        <br />
                        Your Bill of amount &#8377; {item.billAmount} has been
                        successfully generated by Your Merchant{" "}
                        {item.merchantName}.<br />
                        <br />
                        {item.paymentMode === "split" ? (
                            "Please click on the link below to pay your bill."
                        ) : item.paymentMode === "online" ? (
                            <div className="w-50">
                                <Grid container spacing={2}>
                                    <Grid item xs={6}>
                                        <Box>Amount Paid</Box>
                                    </Grid>
                                    <Grid item xs={6}>
                                        <Box>{item.paidAmount}</Box>
                                    </Grid>
                                    <Grid item xs={6}>
                                        <Box>Amount to be paid</Box>
                                    </Grid>
                                    <Grid item xs={6}>
                                        <Box>{item.linkAmount}</Box>
                                    </Grid>
                                </Grid>
                            </div>
                        ) : (
                            <></>
                        )}
                        <Box sx={{ p: 5 }} />
                        Regards,
                        <br />
                        Priority Pay Team <br />
                        <hr />
                        <form
                            id="myForm"
                            name="myForm"
                            action="https://qa.phicommerce.com/pg/api/sale?=v2"
                            method="post"
                            encType="application/x-www-form-urlencoded"
                        >
                            <input
                                type="text"
                                name="merchantID"
                                value="T_99922"
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="merchantTxnNo"
                                value={data[0].transactionId}
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="amount"
                                value={data[0].billAmount}
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="currencyCode"
                                value="356"
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="payType"
                                value=""
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="paymentMode"
                                value=""
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="customerEmailID"
                                value=""
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="transactionType"
                                value=""
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="txnDate"
                                value="20211201175959"
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="aggregatorID"
                                value="J_99923"
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="returnURL"
                                value={`https://prioritypay01.netlify.com/${data[0].transactionId}`}
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="secureHash" //alphanumeric
                                value={result}
                                onChange={(e) => setResult(e.target.value)}
                                className="invisible"
                            />
                            <input
                                type="text"
                                name="hashText"
                                value={secureHash}
                                onChange={(e) => setSecureHash(e.target.value)}
                                className="invisible"
                            />

                            {/* done */}
                            <h4>
                                {" "}
                                {/* {secureHash != null && secureHash !== "" ? ( */}
                                <Button
                                    type={
                                        secureHash != null && secureHash !== ""
                                            ? "submit"
                                            : "button"
                                    }
                                    variant="contained"
                                    color={
                                        secureHash != null && secureHash !== ""
                                            ? "secondary"
                                            : "primary"
                                    }
                                    onClick={() => getHMACResult()}
                                >
                                    {secureHash != null && secureHash !== "" ? (
                                        "Confirm to Proceed"
                                    ) : (
                                        <> Clear Dues</>
                                    )}
                                </Button>
                                {/* )} */}
                            </h4>
                            {/* {secureHash + "value"} */}
                        </form>
                    </div>
                ))}
                {/* //end of map */}
            </div>
        </>
    );
}

export default Transaction;
